<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tekton on Vikas Pogu</title>
    <link>https://vikaspogu.dev/tags/tekton/</link>
    <description>Recent content in tekton on Vikas Pogu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright Â© 2021</copyright>
    <lastBuildDate>Tue, 19 Jan 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://vikaspogu.dev/tags/tekton/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Build multi-arch docker image using Tekton</title>
      <link>https://vikaspogu.dev/blog/tekton-multiarch-buildx/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://vikaspogu.dev/blog/tekton-multiarch-buildx/</guid>
      <description>There are three different strategies to build multi-platform images that Buildx and Dockerfiles support:&#xA;Using the QEMU emulation support in the kernel Building on multiple native nodes using the same builder instance Using a stage in Dockerfile to cross-compile to different architectures I&amp;rsquo;ll focus on the first option, cross-building with emulation using buildx.&#xA;docker buildx build --platform linux/amd64,linux/arm64 . Setup # Steps might differ from platform to platform, but the pipelines will remain the same.</description>
    </item>
    <item>
      <title>Tekton triggers and Interceptors</title>
      <link>https://vikaspogu.dev/blog/tekton-triggers-cel-interception/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://vikaspogu.dev/blog/tekton-triggers-cel-interception/</guid>
      <description>Tekton Triggers work by having EventListeners receive incoming webhook notifications, processing them using an Interceptor, and creating Kubernetes resources from templates if the interceptor allows it, with the extraction of fields from the body of the webhook&#xA;CEL Interceptors can filter or modify incoming events. For example, you can truncate the commit id from the webhook body.&#xA;apiVersion: triggers.tekton.dev/v1alpha1 kind: EventListener metadata: name: shared-listener namespace: default spec: serviceAccountName: build-bot triggers: - name: shared-pipeline-trigger interceptors: - cel: overlays: - key: intercepted.</description>
    </item>
    <item>
      <title>GitOps with Tekton and ArgoCD</title>
      <link>https://vikaspogu.dev/blog/tekton-argocd-gitops/</link>
      <pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://vikaspogu.dev/blog/tekton-argocd-gitops/</guid>
      <description>In this post, I will:&#xA;Use Tekton to build and publish an image to the docker registry Trigger a Tekton pipeline from GitHub Use ArgoCD to deploy an application Getting Started # Pre-requisites:&#xA;An OpenShift 4 cluster with ArgoCD and OpenShift Pipelines installed. If not, you follow instructions to OpenShift Pipelines and ArgoCD Operator Basic understanding of ArgoCD and Tekton concepts Create an OpenShift project called node-web-project&#xA;oc new-project node-web-project Using Private Registries # Create a docker secret with registry authentication details</description>
    </item>
  </channel>
</rss>
